{
    "kind": "template",
    "id": "/providers/Microsoft.Blueprint/blueprints/app_blueprint/artifacts/app_sql_blueprint",
    "type": "Microsoft.Blueprint/blueprints/artifacts",
    "name": "app_sql_blueprint",
    "properties": {
        "resourceGroup": "projectResourceGroup",
        "displayName": "Azure App and Azure SQL service template",
        "description": "A blueprint to deploy Azure App with managed Azure SQL",
        "template": {
            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
                "resourceTags": {
                    "type": "object",
                    "defaultValue": {
                        "CostCenter": "",
                        "Owner": ""
                    },
                    "metadata": {
                        "displayName": "Global resource tag that follows Azure governance"
                    }
                },
                "projectCode": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 5,
                    "metadata": {
                        "displayName": "Project Code (e.g. AGS), must be unique"
                    }
                },
                "projectStage": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 5,
                    "defaultValue": "dev",
                    "allowedValues": [
                        "prod",
                        "dev",
                        "test",
                        "uat"
                    ],
                    "metadata": {
                        "displayName": "Project Stage",
                        "description": "Specify project stage"
                    }
                },
                "location": {
                    "type": "string",
                    "defaultValue": "[resourceGroup().location]",
                    "metadata": {
                        "displayName": "Location for all resources."
                    }
                },
                "websiteName": {
                    "type": "string",
                    "metadata": {
                        "description": "The name of your Web App"
                    }
                },
                "appServiceSkuName": {
                    "type": "string",
                    "allowedValues": [
                        "B1",
                        "B2",
                        "B3",
                        "S1",
                        "S2",
                        "S3",
                        "P1V2",
                        "P2v2",
                        "P3v2"
                    ],
                    "metadata": {
                        "description": "Select an App Service Plan. Note that all B (Basic) plan doesn't support Daily Backup"
                    }
                },
                "appServiceSkuCapacity": {
                    "type": "int",
                    "minValue": 1,
                    "maxValue": 10,
                    "metadata": {
                        "description": "Specify number of instance. Different App Service Plan have different support limit."
                    }
                },
                "dbSkuType": {
                    "type": "string",
                    "allowedValues": [
                        "S0",
                        "S1",
                        "S2"
                    ],
                    "metadata": {
                        "description": "Select Db SKU type"
                    }
                },
                "dbServiceTier": {
                    "type": "string",
                    "allowedValues": [
                        "Basic",
                        "Standard",
                        "Premium"
                    ],
                    "metadata": {
                        "description": "Select Service Tier of DB"
                    }
                },
                "sqlAdminUser": {
                    "type": "string",
                    "metadata": {
                        "description": "The administrator username of the managed SQL logical server"
                    }
                },
                "sqlAdminPassword": {
                    "type": "string",
                    "metadata": {
                        "description": "The administrator's password of the managed SQL logical server"
                    }
                },
                "emailAddress": {
                    "type": "array",
                    "defaultValue": "thuan@outlook.com",
                    "metadata": {
                        "description": "Email for Threat Detection"
                    }
                },
                "adsEnabled": {
                    "type": "bool",
                    "defaultValue": true,
                    "allowedValues": [
                        true,
                        false
                    ],
                    "metadata": {
                        "description": "Enable Advanted Threat Protection in SQL logical server"
                    }
                },
                "transparentDataEncryption": {
                    "type": "string",
                    "defaultValue": "Enabled",
                    "allowedValues": [
                        "Enabled",
                        "Disabled"
                    ],
                    "metadata": {
                        "description": "Enable or disable TDE feature"
                    }
                },
                "storageAccountName": {
                    "type": "string",
                    "metadata": {
                        "description": "Select storage account that is used for storing audit log of ATP"
                    }
                },
                "atpLogRetentionDay": {
                    "type": "int",
                    "defaultValue": 30,
                    "metadata": {
                        "description": "Specify log retention date"
                    }
                }
            },
            "variables": {
                "customTag": {
                    "ProjectCode": "[parameters('projectCode')]",
                    "Environemnt": "[parameters('projectStage')]"
                },
                "hostPlaningName": "[concat(parameters('projectCode'), '-',parameters('projectStage'), '-', parameters('location'))]",
                "websiteName": "[concat(parameters('projectCode'),'-',parameters('websiteName'), '-', parameters('projectStage'), '-',parameters('location'))]",
                "sqlServerName": "[concat(parameters('projectCode'),'-','sqlsrv-',parameters('projectStage'),'-',parameters('location'))]",
                "dbName": "[concat(parameters('projectCode'),'-',parameters('projectStage'), parameters('websiteName'), '-', 'db','-',uniqueString(resourceGroup().id))]"
            },
            "resources": [
                {
                    "name": "[variables('sqlServerName')]",
                    "type": "Microsoft.Sql/servers",
                    "apiVersion": "2018-06-01-preview",
                    "location": "[parameters('location')]",
                    "tags": "[union(parameters('resourceTags'),variables('customTag'))]",
                    "properties": {
                        "administratorLogin": "[parameters('sqlAdminUser')]",
                        "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
                        "version": "12.0"
                    },
                    "resources": [
                        {
                            "condition": "[parameters('adsEnabled')]",
                            "type": "securityAlertPolicies",
                            "name": "Default",
                            "apiVersion": "2017-03-01-preview",
                            "dependsOn": [
                                "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
                            ],
                            "properties": {
                                "state": "Enabled",
                                "emailAccountAdmins": true,
                                "emailAddresses": ["[parameters('emailAddress')]"],
                                "storageEndpoint": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2018-03-01-preview').PrimaryEndpoints.Blob]",
                                "storageAccountAccessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2018-03-01-preview').keys[0].value]",
                                "retentionDays": "[parameters('atpLogRetentionDay')]"
                            }
                        }
                    ]
                },
                {
                    "name": "[concat(string(variables('sqlServerName')), '/', string(variables('dbName')))]",
                    "type": "Microsoft.Sql/servers/databases",
                    "apiVersion": "2017-03-01-preview",
                    "sku": {
                        "name": "[parameters('dbSkuType')]",
                        "tier": "[parameters('dbServiceTier')]"
                    },
                    "kind": "v12.0,user",
                    "location": "[parameters('location')]",
                    "tags": "[union(parameters('resourceTags'),variables('customTag'))]",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]"
                    ],
                    "resources": [
                        {
                            "name": "current",
                            "type": "transparentDataEncryption",
                            "apiVersion": "2017-03-01-preview",
                            "dependsOn": [
                                "[variables('dbName')]"
                            ],
                            "properties": {
                                "status": "[parameters('transparentDataEncryption')]"
                            }
                        }
                    ]
                },
                {
                    "name": "[variables('hostPlaningName')]",
                    "type": "Microsoft.Web/serverfarms",
                    "apiVersion": "2018-02-01",
                    "location": "[parameters('location')]",
                    "tags": "[union(parameters('resourceTags'),variables('customTag'))]",
                    "sku": {
                        "name": "[parameters('appServiceSkuName')]",
                        "capacity": "[parameters('appServiceSkuCapacity')]"
                    },
                    "properties": {
                        "name": "[variables('hostPlaningName')]"
                    }
                },
                {
                    "name": "[variables('websiteName')]",
                    "type": "Microsoft.Web/sites",
                    "apiVersion": "2018-11-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]",
                        "[concat('Microsoft.Sql/servers/', variables('sqlServerName'), '/', 'databases', '/', variables('dbName'))]",
                        "[variables('hostPlaningName')]"
                    ],
                    "tags": "[union(parameters('resourceTags'),variables('customTag'))]",
                    "properties": {
                        "name": "[variables('websiteName')]",
                        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostPlaningName'))]"
                    },
                    "resources": [
                        {
                            "apiVersion": "2018-02-01",
                            "type": "config",
                            "name": "connectionstrings",
                            "dependsOn": [
                                "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]",
                                "[variables('websiteName')]"
                            ],
                            "properties": {
                                "minTlsVersion": "1.2",
                                "ftpsState": "FtpsOnly",
                                "connectionStrings": {
                                    "name": "myDb",
                                    "type": "SQLAzure",
                                    "connectionString": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('dbName'), ';User Id=', parameters('sqlAdminUser'), '@', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ';Password=', parameters('sqlAdminPassword'), ';')]"
                                }
                            }
                        }
                    ]
                }
            ],
            "outputs": {}
        },
        "parameters": {
            "resourceTags": {
                "value": "[parameters('g_resourceTags')]"
            },
            "projectCode": {
                "value": "[parameters('g_projectCode')]"
            },
            "projectStage": {
                "value": "[parameters('g_projectStage')]"
            },
            "websiteName": {
                "value": "[parameters('g_websiteName')]"
            },
            "appServiceSkuName": {
                "value": "[parameters('g_appServiceSkuName')]"
            },
            "appServiceSkuCapacity": {
                "value": "[parameters('g_appServiceSkuCapacity')]"
            },
            "dbSkuType": {
                "value": "[parameters('g_dbSkuType')]"
            },
            "dbServiceTier": {
                "value": "[parameters('g_dbServiceTier')]"
            },
            "sqlAdminUser": {
                "value": "[parameters('g_sqlAdminUser')]"
            },
            "sqlAdminPassword": {
                "value": "[parameters('g_sqlAdminPassword')]"
            },
            "emailAddress": {
                "value": "[parameters('g_emailAddress')]"
            },
            "adsEnabled": {
                "value": "[parameters('g_adsEnabled')]"
            },
            "transparentDataEncryption": {
                "value": "[parameters('g_transparentDataEncryption')]"
            },
            "storageAccountName": {
                "value": "[parameters('g_storageAccountName')]"
            },
            "atpLogRetentionDay": {
                "value": "[parameters('g_atpLogRetentionDay')]"
            }
        },
        "dependsOn": []
    }
}